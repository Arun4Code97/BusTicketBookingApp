<!DOCTYPE html>
<html lang="en" xmlns:th="www.thymeleaf.org">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" type="image/x-icon" th:href="@{/passenger_fevicon.png}">
    <title>BookMyBus</title>
    <link rel="stylesheet" th:href="@{/bootstrap/bootstrap.min.css}">
    <link rel="stylesheet" th:href="@{/css/portalTemplate.css}">
    <style>
        .from-place {
            color: blue;
            font-style: italic;
        }

        .to-place {
            color: blue;
            font-style: italic;
        }

        .trip-date {
            color: red;
            font-style: italic;
        }

        .seats-container {
            margin-top: 20px;
            padding: 10px;
            border: 1px solid #ccc;
            background-color: #f9f9f9;
        }

        .deck {
            margin-bottom: 20px;
        }

        .seat-grid {
            display: grid;
            grid-template-columns: repeat(5, 1fr);
            gap: 10px;
        }

        /* Standard and Semi Sleeper Seats (Square) */
        .seat {
            text-align: center;
            line-height: 40px;
            border: 1px solid #ccc;
            cursor: pointer;
            transition: transform 0.3s ease;
        }

        .standard {
            width: 40px;
            height: 40px;
            border-radius: 5px;
        }
                /* Sleeper Seats (Rectangular) */
        .sleeper {
            width: 60px;
            height: 80px;
            border-radius: 10px;
            background-color: #f44336; /* Sleeper seats color */
        }


        .seat.available {
            background-color: #4CAF50;
            color: white;
        }

        .seat.booked {
            background-color: gray;
            color: white;
            cursor: not-allowed;
        }


        .d-none {
            display: none;
        }
    </style>
</head>
<body>
<!-- Contents & Footer-->
<div class="wrapper">
    <!-- 1. Sidebar and Main content (Contents) -->
    <div class="content-wrapper">
        <!-- Sidebar -->
        <nav class="col-md-3 col-lg-2 d-md-block bg-secondary text-white sidebar sidebar-sticky">
            <div class="position-sticky pt-3">
                <h3 class="text-white">Passenger</h3>
                <div class="navigation" th:replace="~{utility/passengerNavigation :: navigation}"></div>
            </div>
        </nav>

        <!-- Main Content -->
        <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
            <div class="pt-3 pb-2 mb-3 border-bottom">
                <h4 class="text-start mb-2">BookMyBus</h4>

                <div class="innerContainer">
                    <h5 class="text-start mb-4">Select Bus</h5>
                    <h6 class="text-start mb-2">
                        <span th:if="${availableBuses.size() > 0}">
                            <span th:text="'Found ' + ${availableBuses.size()} + ' buses from : '"></span>
                            <span class="from-place" th:text="${searchDto.fromPlace}"></span>
                            <span style='font-size:18px;'>&#8594;</span>
                            <span class="to-place" th:text="${searchDto.toPlace}"></span>
                            on <span class="trip-date" th:text="' ' + ${searchDto.tripDate}"></span>
                        </span>
                        <span th:if="${availableBuses.size() == 0}">
                            No buses found from :
                            <span class="from-place" th:text="' ' + ${searchDto.fromPlace}"></span>
                            <span style='font-size:18px;'>&#8594;</span>
                            <span class="to-place" th:text="' ' + ${searchDto.toPlace}"></span>
                            on <span class="trip-date" th:text="' ' + ${searchDto.tripDate}"></span>
                        </span>
                    </h6>
                    <form class="form-inline" th:action="@{/bookMyBus/passengerPortal/{id}/selectBus(id=${passenger.id})}" method="post" id="passengerForm">

                        <div th:each="bus : ${availableBuses}" class="bus-card mb-3 p-3 border">
                            <h5 th:text="${bus.name}" class="text-primary"></h5>
                            <p>Route:
                                <span th:text="${bus.routes[0].departurePlace}"></span> â†’
                                <span th:text="${bus.routes[0].arrivalPlace}"></span>
                            </p>
                            <p>Departure: <span th:text="${bus.routes[0].departureTime}"></span></p>
                            <p>Arrival: <span th:text="${bus.routes[0].arrivalTime}"></span></p>

                            <!-- Seat container for each bus -->
                            <button type="button" class="btn btn-info"
                                    th:onclick="'showSeats(' + ${bus.id} + ')'">
                                Show Seats
                            </button>
                            <div th:id="'seats-container-' + ${bus.id}" class="seats-container d-none"></div>

                        </div>

                    </form>
                </div>
            </div>
        </main>
    </div>

    <!-- 2. Footer -->
    <footer class="bg-secondary text-white">
        <hr />
        <div th:replace="~{utility/footer :: footer}"></div>
    </footer>

</div>

<script>
    function showSeats(busId) {
        console.log("Bus ID passed to showSeats:", busId);

        // Select the container dynamically based on busId
        const container = document.getElementById(`seats-container-${busId}`);
        console.log(`Container ID: seats-container-${busId}`);

        if (!container) {
            console.error("Container for bus ID not found:", busId);
            return;
        }

        // Toggle the visibility
        if (!container.classList.contains("d-none")) {
            container.classList.add("d-none");
            return;
        }

        // Fetch seat data via AJAX (using Fetch API)
        fetch(`/bookMyBus/passengerPortal/${busId}/seats`)
            .then(response => {
                if (!response.ok) {
                    throw new Error("Failed to fetch seats");
                }
                return response.json();
            })
            .then(data => {
                renderSeats(data, container);
                container.classList.remove("d-none");
            })
            .catch(error => {
                console.error("Error fetching seat data:", error);
                alert("Failed to load seats. Please try again.");
            });
    }

    function renderSeats(seats, container) {
        container.innerHTML = ""; // Clear existing seats

        // Separate seats into decks
        const lowerDeck = seats.filter(seat => seat.seatNumber.startsWith("L"));
        const upperDeck = seats.filter(seat => seat.seatNumber.startsWith("U"));

        // Render lower deck
        if (lowerDeck.length > 0) {
            container.innerHTML += renderDeck(lowerDeck, "Lower Deck");
        }

        // Render upper deck if applicable
        if (upperDeck.length > 0) {
            container.innerHTML += renderDeck(upperDeck, "Upper Deck");
        }
    }

    function renderDeck(seats, deckName) {
        let html = `<div class="deck"><h5>${deckName}</h5>`;
        html += `<div class="seat-grid">`;

        seats.forEach(seat => {
            html += renderSeat(seat);
        });

        html += `</div></div>`;
        return html;
    }

    function renderSeat(seat) {
        let seatClass = seat.isBooked ? "seat booked" : "seat available";


    console.log("Rendering seat:", seat);  // Debugging to check the seat data

    // Apply class based on the seatType
    if (seat.seatType === "standardSeater" || seat.seatType === "semiSleeper") {
        seatClass += " standard";  // Apply standard class for both Standard and Semi Sleeper
    } else if (seat.seatType === "sleeper") {
        seatClass += " sleeper";  // Apply sleeper class for Sleeper seats
    } else {
        console.warn("Unknown seat type:", seat.seatType);  // Debugging unknown seat types
    }

        return `<div class="${seatClass}" data-seat-id="${seat.id}">${seat.seatNumber}</div>`;
    }
</script>

</body>
</html>
